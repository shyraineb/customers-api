<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:validation="http://www.mulesoft.org/schema/mule/validation" xmlns:os="http://www.mulesoft.org/schema/mule/os"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/validation http://www.mulesoft.org/schema/mule/validation/current/mule-validation.xsd">
	<http:listener-config name="HTTP_Listener_config" doc:name="HTTP Listener config" doc:id="6953a259-b189-4448-83da-a581d6410a39" >
		<http:listener-connection host="0.0.0.0" port="8081" />
	</http:listener-config>
	<os:object-store name="Object_store" doc:name="Object store" doc:id="1d55e800-98fe-4efb-855d-d7bb4d892bf6" maxEntries="100" entryTtl="5" entryTtlUnit="HOURS" expirationInterval="5" expirationIntervalUnit="HOURS"/>
	<db:config name="Database_Config" doc:name="Database Config" doc:id="5a2cb418-36ec-43e4-a101-57594834cc2c" >
		<db:generic-connection url="jdbc:postgresql://ec2-52-44-13-158.compute-1.amazonaws.com:5432/dbqo2nk2cap7te?sslmode=require" driverClassName="org.postgresql.Driver" user="ggjzicckmewubd" password="a8b694205d7e8f72f9c08309fab2aab5ff8388ad59a1a56a8803e0591fc3133d" />
	</db:config>
	<validation:config name="Validation_Config" doc:name="Validation Config" doc:id="1ffd4368-106d-43e0-b28b-7da034909141" />
	<flow name="getCustomers-db" doc:id="27427cb0-4ae7-4ac8-a45e-0a7c89f8cbbe" >
		<db:select doc:name="Select" doc:id="304d13e2-cdbb-4f53-afa9-79b31dfdba31" config-ref="Database_Config">
			<db:sql><![CDATA[SELECT * FROM customers;]]></db:sql>
		</db:select>
		<choice doc:name="Copy_of_Choice" doc:id="d1609e02-5f32-4425-8cb3-3da45fe84137" >
			<when expression="#[payload == []]" >
				<raise-error doc:name="Raise error" doc:id="8a156b46-0734-4334-9a26-14c1a842de0f" type="CUSTOMER:NO_DATA" description="No Customers Data in "/>
			</when>
			<otherwise >
				<ee:transform doc:name="Transform Message" doc:id="c5c8dbe8-9113-4270-b728-91ed02854c60">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
Customers: (payload map {
      id: $.id as String default null,
      firstName: $.first_name,
      lastName: $.last_name,
      Age: $.age as String default null,
      Address: {
        Street: $.street_address,
        City: $.city_address,
        State: $.state_address,
        postalCode: $.postal_code as String default null
      }
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</otherwise>
		</choice>
		<error-handler>
			<on-error-propagate enableNotifications="true" logException="true" doc:name="On Error Propagate" doc:id="3d8dab21-d9cb-4878-a3a0-930e9272ceed" >
				<ee:transform doc:name="No data" doc:id="834269e4-4eb1-4b12-bbea-8ed0b055473c" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"errorType": error.errorType.identifier,
	"errorMessage": error.description
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="404" doc:name="httpStatus" doc:id="63cb0f73-0bba-4961-91c8-bef9ed604f8e" variableName="httpStatus" />
			</on-error-propagate>
		</error-handler>
	</flow>
	<flow name="postCustomer-db" doc:id="c03b03b9-c18f-437b-bafe-40361e993553" >
		<try doc:name="Try" doc:id="1384350a-a71c-4caf-8774-20f77c2056d4" >
			<db:stored-procedure doc:name="Stored procedure" doc:id="e5e90c23-db21-474a-9141-2bd6d42e5f47" config-ref="Database_Config">
			<db:sql><![CDATA[CALL insertCustomer(:id, :fname, :lname, :age, :street, :city, :state, :code);]]></db:sql>
			<db:input-parameters><![CDATA[#[{
	id: payload.id,
	fname: payload.firstName,
	lname: payload.lastName,
	age: payload.age,
	street: payload.address.streetAddress,
	city: payload.address.city,
	state: payload.address.state,
	code: payload.address.postalCode
}]]]></db:input-parameters>
		</db:stored-procedure>
			<error-handler>
				<on-error-continue enableNotifications="true" logException="true" doc:name="On Error Continue" doc:id="cf729acd-19cb-4bca-9b73-36492bbe4ab4" type="ANY">
				<ee:transform doc:name="Error" doc:id="2cde15e5-9b7a-4f12-a169-2637594a506f">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
error.description]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="400" doc:name="httpStatus" doc:id="fbdeeba1-cdc1-4dc6-ae51-ee11e0b9a598" variableName="httpStatus" />
			</on-error-continue>
			</error-handler>
		</try>
		<ee:transform doc:name="Transform Message" doc:id="95b39eb8-13ef-49e9-a91c-e08a1b6e404f">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
"Successfully inserted -- " ++ payload.resultSet1[0].fname as String default null]]></ee:set-payload>
			</ee:message>
		</ee:transform>
	</flow>
	<flow name="updateCustomer-db" doc:id="f589a81d-06cd-4eb8-982e-e2eb87108061" >
		<db:stored-procedure doc:name="Stored procedure" doc:id="de3da195-56b9-41b3-84ec-22e057de5be1" config-ref="Database_Config">
			<db:sql ><![CDATA[CALL updateCustomer(:id, :fname, :lname, :age, :street, :city, :state, :code);]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: attributes.uriParams.ID as Number,
	fname: payload.firstName,
	lname: payload.lastName,
	age: payload.age,
	street: payload.address.streetAddress,
	city: payload.address.city,
	state: payload.address.state,
	code: payload.adress.postalCode
}]]]></db:input-parameters>
		</db:stored-procedure>
		<choice doc:name="Choice" doc:id="ec0c15f0-9fbd-4bcf-89f3-2cf0ba243410" >
			<when expression="#[payload.resultSet1[0].fname == null]" >
				<ee:transform doc:name="Not found" doc:id="7535ca1f-2248-484f-a4c9-ebc5162ca3c7" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Customer to update not found"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="404" doc:name="httpStatus" doc:id="33015157-e2d4-4a7f-8439-bb37ffafba41" variableName="httpStatus" />
			</when>
			<otherwise >
				<ee:transform doc:name="Success" doc:id="cf63e757-b899-40ae-a3f9-f8dee5abd4b8" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
"Successfully updated"]]></ee:set-payload>
					</ee:message>
				</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="deleteCustomer-db" doc:id="005deea6-392d-43d5-b25d-4ec040243980" >
		<db:stored-procedure doc:name="Stored procedure" doc:id="7fea3ae1-16b0-4b65-9f4e-655f22f0c142" config-ref="Database_Config">
			<db:sql ><![CDATA[CALL deleteCustomer(:id);]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: attributes.uriParams.ID as Number
}]]]></db:input-parameters>
		</db:stored-procedure>
		<choice doc:name="Choice" doc:id="9f571995-08c3-4370-a840-9ead7580cf2c">
			<when expression="#[payload.resultSet1[0].idno == null]">
				<ee:transform doc:name="Not found" doc:id="f27ccbd3-83c4-48d3-ac35-f386587304db">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Customer not found"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="404" doc:name="httpStatus" doc:id="7e6e634b-9f83-4333-9f5f-ab783aa98506" variableName="httpStatus" />
			</when>
			<otherwise>
				<ee:transform doc:name="Success" doc:id="84fe4d4d-ba69-4701-a414-11c8daa8f339">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
"Successfully deleted"]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</otherwise>
		</choice>
	</flow>
	<flow name="getCustomerByID-db" doc:id="c0c9d9b1-911e-477e-bd0a-fb4fad81d30c" >
		<db:select doc:name="Select" doc:id="8e2c4324-aca7-4be6-9f93-56f135964ac6" config-ref="Database_Config" >
			<error-mapping targetType="APP:NOT_FOUND" />
			<db:sql ><![CDATA[SELECT * FROM customers where id = :id;]]></db:sql>
			<db:input-parameters ><![CDATA[#[{
	id: attributes.uriParams.ID
}]]]></db:input-parameters>
		</db:select>
		<choice doc:name="Choice" doc:id="7d195d5b-b6f8-46d3-8210-337233e0fd60">
			<when expression="#[payload == []]">
				<ee:transform doc:name="Not found" doc:id="e78e0336-570a-495e-a773-0ddf57036ac2">
					<ee:message>
						<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{
	"message": "Customer not found"
}]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<set-variable value="404" doc:name="httpStatus" doc:id="d10cf269-54fa-4434-9082-71db745f810e" variableName="httpStatus" />
			</when>
			<otherwise>
				<ee:transform doc:name="Transform Message" doc:id="3f7b4956-db05-4742-920c-97cc40e3b1a4">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
Customer: (payload map {
      id: $.id as String default null,
      firstName: $.first_name,
      lastName: $.last_name,
      Age: $.age as String default null,
      Address: {
        Street: $.street_address,
        City: $.city_address,
        State: $.state_address,
        postalCode: $.postal_code as String default null
      }
})]]></ee:set-payload>
			</ee:message>
		</ee:transform>
			</otherwise>
		</choice>
	</flow>
</mule>
